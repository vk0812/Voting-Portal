{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/auth.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/table\";\nimport * as i7 from \"@angular/material/paginator\";\nimport * as i8 from \"@angular/material/sort\";\nfunction UserComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.id, \" \");\n  }\n}\nfunction UserComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.name, \" \");\n  }\n}\nfunction UserComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r16 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r16.email, \" \");\n  }\n}\nfunction UserComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 17);\n    i0.ɵɵtext(1, \" Status \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r17 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r17.isactive ? \"Active\" : \"In Active\", \" \");\n  }\n}\nfunction UserComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵtext(1, \" Role \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r18.role === \"\" ? \"Un Assigned\" : element_r18.role, \" \");\n  }\n}\nfunction UserComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 15);\n    i0.ɵɵtext(1, \" Action \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_19_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function UserComponent_td_19_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const element_r19 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r21.updateuser(element_r19.id));\n    });\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtemplate(1, UserComponent_td_19_button_1_Template, 2, 0, \"button\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", element_r19.role !== \"admin\");\n  }\n}\nfunction UserComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 21);\n  }\n}\nfunction UserComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 22);\n  }\n}\nconst _c0 = function () {\n  return [5, 100, 200];\n};\nexport class UserComponent {\n  constructor(builder, service, dialog) {\n    this.builder = builder;\n    this.service = service;\n    this.dialog = dialog;\n    this.displayedColumns = ['username', 'name', 'email', 'status', 'role', 'action'];\n    this.LoadUser();\n  }\n  ngAfterViewInit() {}\n  LoadUser() {\n    this.service.Getall().subscribe(res => {\n      this.userlist = res;\n      this.dataSource = new MatTableDataSource(this.userlist);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  updateuser(code) {\n    this.OpenDialog('1000ms', '600ms', code);\n  }\n  OpenDialog(enteranimation, exitanimation, code) {\n    const popup = this.dialog.open(UpdatepopupComponent, {\n      enterAnimationDuration: enteranimation,\n      exitAnimationDuration: exitanimation,\n      width: '30%',\n      data: {\n        usercode: code\n      }\n    });\n    popup.afterClosed().subscribe(res => {\n      this.LoadUser();\n    });\n  }\n}\nUserComponent.ɵfac = function UserComponent_Factory(t) {\n  return new (t || UserComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MatDialog));\n};\nUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserComponent,\n  selectors: [[\"app-user\"]],\n  viewQuery: function UserComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatPaginator, 5);\n      i0.ɵɵviewQuery(MatSort, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 5,\n  consts: [[1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"matSort\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"username\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"email\"], [\"matColumnDef\", \"status\"], [\"matColumnDef\", \"role\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"action\"], [\"bgcolor\", \"green\", \"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"bgcolor\", \"green\", \"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"showFirstLastButtons\", \"\", \"aria-label\", \"Select page of periodic elements\", 3, \"pageSizeOptions\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"mat-sort-header\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"bgcolor\", \"green\", \"mat-header-row\", \"\"], [\"bgcolor\", \"green\", \"mat-row\", \"\"]],\n  template: function UserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1);\n      i0.ɵɵelementContainerStart(2, 2);\n      i0.ɵɵtemplate(3, UserComponent_th_3_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(4, UserComponent_td_4_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(5, 5);\n      i0.ɵɵtemplate(6, UserComponent_th_6_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(7, UserComponent_td_7_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(8, 7);\n      i0.ɵɵtemplate(9, UserComponent_th_9_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(10, UserComponent_td_10_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(11, 8);\n      i0.ɵɵtemplate(12, UserComponent_th_12_Template, 2, 0, \"th\", 6);\n      i0.ɵɵtemplate(13, UserComponent_td_13_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(14, 9);\n      i0.ɵɵtemplate(15, UserComponent_th_15_Template, 2, 0, \"th\", 10);\n      i0.ɵɵtemplate(16, UserComponent_td_16_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(17, 11);\n      i0.ɵɵtemplate(18, UserComponent_th_18_Template, 2, 0, \"th\", 3);\n      i0.ɵɵtemplate(19, UserComponent_td_19_Template, 2, 1, \"td\", 4);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(20, UserComponent_tr_20_Template, 1, 0, \"tr\", 12);\n      i0.ɵɵtemplate(21, UserComponent_tr_21_Template, 1, 0, \"tr\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"mat-paginator\", 14);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n    }\n  },\n  dependencies: [i4.NgIf, i5.MatButton, i6.MatTable, i6.MatHeaderCellDef, i6.MatHeaderRowDef, i6.MatColumnDef, i6.MatCellDef, i6.MatRowDef, i6.MatHeaderCell, i6.MatCell, i6.MatHeaderRow, i6.MatRow, i7.MatPaginator, i8.MatSort, i8.MatSortHeader],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["MatTableDataSource","MatPaginator","MatSort","UpdatepopupComponent","i0","UserComponent","constructor","builder","service","dialog","LoadUser","ngAfterViewInit","Getall","subscribe","res","userlist","dataSource","paginator","sort","updateuser","code","OpenDialog","enteranimation","exitanimation","popup","open","enterAnimationDuration","exitAnimationDuration","width","data","usercode","afterClosed","selectors","viewQuery"],"sourceRoot":"","sources":["C:\\Users\\DELL\\vote-portal\\src\\app\\user\\user.component.ts","C:\\Users\\DELL\\vote-portal\\src\\app\\user\\user.component.html"],"sourcesContent":["import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AuthService } from '../service/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements AfterViewInit {\n\n  constructor(private builder: FormBuilder, private service: AuthService, private dialog: MatDialog) {\n    this.LoadUser();\n  }\n  userlist: any;\n  dataSource: any;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngAfterViewInit(): void {\n\n  }\n  LoadUser() {\n    this.service.Getall().subscribe(res => {\n      this.userlist = res;\n      this.dataSource = new MatTableDataSource(this.userlist);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  displayedColumns: string[] = ['username', 'name', 'email', 'status', 'role', 'action'];\n\n  updateuser(code: any) {\n    this.OpenDialog('1000ms', '600ms', code);\n  }\n\n  OpenDialog(enteranimation: any, exitanimation: any, code: string) {\n    const popup = this.dialog.open(UpdatepopupComponent, {\n      enterAnimationDuration: enteranimation,\n      exitAnimationDuration: exitanimation,\n      width: '30%',\n      data: {\n        usercode: code\n      }\n    });\n    popup.afterClosed().subscribe(res => {\n      this.LoadUser();\n    });\n  }\n\n\n\n}\n","\n        <div class=\"mat-elevation-z8\">\n            <table mat-table matSort  [dataSource]=\"dataSource\">\n          \n              <!-- Position Column -->\n              <ng-container matColumnDef=\"username\">\n                <th mat-header-cell *matHeaderCellDef> Username </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n              </ng-container>\n          \n              <!-- Name Column -->\n              <ng-container  matColumnDef=\"name\">\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Name </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n              </ng-container>\n          \n              <!-- Weight Column -->\n              <ng-container matColumnDef=\"email\">\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Email </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n              </ng-container>\n          \n              <!-- Symbol Column -->\n              <ng-container matColumnDef=\"status\">\n                <th mat-header-cell mat-sort-header *matHeaderCellDef> Status </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.isactive ? 'Active':'In Active'}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"role\">\n                <th mat-header-cell mat-sort-header mat-sort-header *matHeaderCellDef> Role </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.role ===''? 'Un Assigned':element.role}} </td>\n              </ng-container>\n              <ng-container matColumnDef=\"action\">\n                <th mat-header-cell *matHeaderCellDef> Action </th>\n                <td mat-cell *matCellDef=\"let element\">  \n                    <button *ngIf=\"element.role !=='admin'\" (click)=\"updateuser(element.id)\" mat-raised-button color=\"primary\">Update</button>\n                </td>\n              </ng-container>\n          \n              <tr bgcolor=\"green\" mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr bgcolor=\"green\" mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 100, 200]\"\n            showFirstLastButtons\n            aria-label=\"Select page of periodic elements\">\n</mat-paginator>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}