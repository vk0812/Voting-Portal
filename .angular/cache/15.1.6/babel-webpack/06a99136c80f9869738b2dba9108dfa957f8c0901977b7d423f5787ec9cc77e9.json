{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component';\nlet UserComponent = class UserComponent {\n  constructor(builder, service, dialog) {\n    this.builder = builder;\n    this.service = service;\n    this.dialog = dialog;\n    this.displayedColumns = ['username', 'name', 'email', 'status', 'role', 'action'];\n    this.LoadUser();\n  }\n  ngAfterViewInit() {}\n  LoadUser() {\n    this.service.Getall().subscribe(res => {\n      this.userlist = res;\n      this.dataSource = new MatTableDataSource(this.userlist);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  updateuser(code) {\n    this.OpenDialog('1000ms', '600ms', code);\n  }\n  OpenDialog(enteranimation, exitanimation, code) {\n    const popup = this.dialog.open(UpdatepopupComponent, {\n      enterAnimationDuration: enteranimation,\n      exitAnimationDuration: exitanimation,\n      width: '30%',\n      data: {\n        usercode: code\n      }\n    });\n    popup.afterClosed().subscribe(res => {\n      this.LoadUser();\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator)], UserComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort)], UserComponent.prototype, \"sort\", void 0);\nUserComponent = __decorate([Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})], UserComponent);\nexport { UserComponent };","map":{"version":3,"mappings":";AAAA,SAAwBA,SAAS,EAAEC,SAAS,QAAQ,eAAe;AAEnE,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAGhD,SAASC,oBAAoB,QAAQ,sCAAsC;AAOpE,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAoBC,OAAoB,EAAUC,OAAoB,EAAUC,MAAiB;IAA7E,YAAO,GAAPF,OAAO;IAAuB,YAAO,GAAPC,OAAO;IAAuB,WAAM,GAANC,MAAM;IAmBtF,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IAlBpF,IAAI,CAACC,QAAQ,EAAE;EACjB;EAMAC,eAAe,IAEf;EACAD,QAAQ;IACN,IAAI,CAACF,OAAO,CAACI,MAAM,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACpC,IAAI,CAACC,QAAQ,GAAGD,GAAG;MACnB,IAAI,CAACE,UAAU,GAAG,IAAIf,kBAAkB,CAAC,IAAI,CAACc,QAAQ,CAAC;MACvD,IAAI,CAACC,UAAU,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS;MAC1C,IAAI,CAACD,UAAU,CAACE,IAAI,GAAG,IAAI,CAACA,IAAI;IAClC,CAAC,CAAC;EACJ;EAGAC,UAAU,CAACC,IAAS;IAClB,IAAI,CAACC,UAAU,CAAC,QAAQ,EAAE,OAAO,EAAED,IAAI,CAAC;EAC1C;EAEAC,UAAU,CAACC,cAAmB,EAAEC,aAAkB,EAAEH,IAAY;IAC9D,MAAMI,KAAK,GAAG,IAAI,CAACf,MAAM,CAACgB,IAAI,CAACrB,oBAAoB,EAAE;MACnDsB,sBAAsB,EAAEJ,cAAc;MACtCK,qBAAqB,EAAEJ,aAAa;MACpCK,KAAK,EAAE,KAAK;MACZC,IAAI,EAAE;QACJC,QAAQ,EAAEV;;KAEb,CAAC;IACFI,KAAK,CAACO,WAAW,EAAE,CAAClB,SAAS,CAACC,GAAG,IAAG;MAClC,IAAI,CAACJ,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;CAID;AApC0BsB,YAAxBhC,SAAS,CAACE,YAAY,CAAC,gDAA0B;AAC9B8B,YAAnBhC,SAAS,CAACG,OAAO,CAAC,2CAAgB;AARxBE,aAAa,eALzBN,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACW9B,aAAa,CA2CzB;SA3CYA,aAAa","names":["Component","ViewChild","MatTableDataSource","MatPaginator","MatSort","UpdatepopupComponent","UserComponent","constructor","builder","service","dialog","LoadUser","ngAfterViewInit","Getall","subscribe","res","userlist","dataSource","paginator","sort","updateuser","code","OpenDialog","enteranimation","exitanimation","popup","open","enterAnimationDuration","exitAnimationDuration","width","data","usercode","afterClosed","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\DELL\\vote-portal\\src\\app\\userlisting\\userlisting.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AuthService } from '../service/auth.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UpdatepopupComponent } from '../updatepopup/updatepopup.component'\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements AfterViewInit {\n\n  constructor(private builder: FormBuilder, private service: AuthService, private dialog: MatDialog) {\n    this.LoadUser();\n  }\n  userlist: any;\n  dataSource: any;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngAfterViewInit(): void {\n\n  }\n  LoadUser() {\n    this.service.Getall().subscribe(res => {\n      this.userlist = res;\n      this.dataSource = new MatTableDataSource(this.userlist);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  displayedColumns: string[] = ['username', 'name', 'email', 'status', 'role', 'action'];\n\n  updateuser(code: any) {\n    this.OpenDialog('1000ms', '600ms', code);\n  }\n\n  OpenDialog(enteranimation: any, exitanimation: any, code: string) {\n    const popup = this.dialog.open(UpdatepopupComponent, {\n      enterAnimationDuration: enteranimation,\n      exitAnimationDuration: exitanimation,\n      width: '30%',\n      data: {\n        usercode: code\n      }\n    });\n    popup.afterClosed().subscribe(res => {\n      this.LoadUser();\n    });\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}