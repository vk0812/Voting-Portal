{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nexport class AuthGuard {\n  constructor(service, router, tostr) {\n    this.service = service;\n    this.router = router;\n    this.tostr = tostr;\n  }\n  canActivate(route, state) {\n    if (this.service.Isloggedin()) {\n      if (route.url.length > 0) {\n        let menu = route.url[0].path;\n        if (menu == 'user') {\n          if (this.service.getrole() == 'admin') {\n            return true;\n          } else {\n            this.router.navigate(['']);\n            this.tostr.warning('You dont have access.');\n            return false;\n          }\n        } else {\n          return true;\n        }\n      } else return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,OAAoB,EAAUC,MAAc,EAASC,KAAmB;IAAxE,YAAO,GAAPF,OAAO;IAAuB,WAAM,GAANC,MAAM;IAAiB,UAAK,GAALC,KAAK;EAAkB;EAChGC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACL,OAAO,CAACM,UAAU,EAAE,EAAE;MAC7B,IAAIF,KAAK,CAACG,GAAG,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,IAAIC,IAAI,GAAGL,KAAK,CAACG,GAAG,CAAC,CAAC,CAAC,CAACG,IAAI;QAC5B,IAAID,IAAI,IAAI,MAAM,EAAE;UAClB,IAAI,IAAI,CAACT,OAAO,CAACW,OAAO,EAAE,IAAI,OAAO,EAAE;YACrC,OAAO,IAAI;WACZ,MAAM;YACL,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;YACxB,IAAI,CAACV,KAAK,CAACW,OAAO,CAAC,uBAAuB,CAAC;YAC7C,OAAO,KAAK;;SAEf,MAAI;UACH,OAAO,IAAI;;OAEhB,MAED,OAAO,IAAI;KACZ,MACM;MACH,IAAI,CAACZ,MAAM,CAACW,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,KAAK;;EAEhB;;AA5BWd,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAgB,SAAThB,SAAS;EAAAiB,YAFR;AAAM","names":["AuthGuard","constructor","service","router","tostr","canActivate","route","state","Isloggedin","url","length","menu","path","getrole","navigate","warning","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\DELL\\vote-portal\\src\\app\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private service: AuthService, private router: Router,private tostr:ToastrService) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n   \n    if (this.service.Isloggedin()) {\n      if (route.url.length > 0) {\n        let menu = route.url[0].path;\n        if (menu == 'user') {\n          if (this.service.getrole() == 'admin') {\n            return true;\n          } else {\n            this.router.navigate(['']);\n              this.tostr.warning('You dont have access.')\n            return false;\n          }\n        }else{\n          return true;\n        }\n    }\n    else\n    return true;\n  }\n    else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}